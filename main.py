import streamlit as st
import app
from datetime import date

today = date.today()
current_year = today.year
net_revenue, material_cost, pvgs, intermed_services, subcontracting = 0, 0, 0, 0, 0

# --------------------------------------

st.set_page_config(page_title="Ipar≈±z√©si ad√≥ kalkul√°tor", page_icon="üßä")

st.title("Ipar≈±z√©si ad√≥ kalkul√°tor")

lbt_city = st.selectbox("V√°laszd ki a sz√©khelyed szerinti telep√ºl√©st!", (["V√°lassz!"] + app.get_all_lbt_account()))

if lbt_city != 'V√°lassz!':
    lbt_rate = app.get_lbt_rate(lbt_city)
    st.write(f"A telep√ºl√©sen √©rv√©nyes ad√≥kulcs: {lbt_rate:,}%".replace('.', ','))

    if app.has_lbt_rate(lbt_city):
        st.subheader("**Alap adatok**")

        colRevenue, colKata = st.columns(2)

        with colRevenue:
            net_revenue = st.number_input("Add meg az √©ves bev√©teled!", min_value=100000, step=100000,
                                          format="%d".replace(",", "."))

        with colKata:
            kata = st.checkbox("A kata ad√≥ hat√°lya al√° tartozol?")
            acc_costs = st.checkbox("Vannak elsz√°molhat√≥ k√∂lts√©geid?")

        if acc_costs:
            st.markdown("---")
            st.subheader("**Elsz√°molhat√≥ k√∂lts√©gek**")
            colExpenses1, colExpenses2 = st.columns(2)

            with colExpenses1:
                material_cost = st.number_input("Add meg az anyagk√∂lts√©ged √©rt√©k√©t!", min_value=0, step=100000)
                pvgs = st.number_input("Add meg az eladott √°ruid beszerz√©si √©rt√©k√©t!", min_value=0, step=100000)

            with colExpenses2:
                intermed_services = st.number_input("Add meg a k√∂zvet√≠tett szolg√°ltat√°sok √©rt√©k√©t!",
                                                    min_value=0, step=100000)
                subcontracting = st.number_input("Add meg az alv√°llalkoz√≥id teljes√≠t√©sek √©rt√©k√©t!", min_value=0,
                                                 step=100000)

        st.markdown("---")

        if net_revenue and lbt_rate:
            main_data = app.main_data
            lbt_options = app.get_lbt_options(net_revenue, material_cost, pvgs, intermed_services, subcontracting,
                                              main_data, lbt_city, kata, current_year)
            recommendation = app.get_recommended_lbt(net_revenue, material_cost, pvgs, intermed_services,
                                                     subcontracting, main_data, lbt_city, kata, current_year)

            st.subheader("Lehet≈ës√©geid")
            for option in lbt_options:

                if option == 'itemized':
                    itemized = f"{lbt_options[option]:,}".replace(',', '.')
                    if recommendation == 'itemized':
                        st.success(f"T√©teles ipar≈±z√©si ad√≥: {itemized} Ft")
                    else:
                        st.info(f"T√©teles ipar≈±z√©si ad√≥: {itemized} Ft")

                elif option == 'simplified':
                    simplified = f"{lbt_options[option]:,}".replace(',', '.')
                    if recommendation == 'simplified':
                        st.success(f"Egyszer≈±s√≠tett ad√≥alap-meg√°llap√≠t√°s: {simplified} Ft")
                    else:
                        st.info(f"Egyszer≈±s√≠tett ad√≥alap-meg√°llap√≠t√°s: {simplified} Ft")

                else:
                    normal = f"{lbt_options[option]:,}".replace(',', '.')
                    if recommendation == 'normal':
                        st.success(f"Norm√°l ipar≈±z√©si ad√≥: {normal} Ft")
                    else:
                        st.info(f"Norm√°l ipar≈±z√©si ad√≥: {normal} Ft")

        else:
            st.warning("T√∫l kev√©s adatot adt√°l meg!")
    else:
        st.success("A megadott telep√ºl√©sen nincs ipar≈±z√©si ad√≥fizet√©sre vonatkoz√≥ k√∂telezetts√©g!")

st.markdown("---")
st.write("@author: E. Martin Maho")
